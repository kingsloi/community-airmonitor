extends layout

block content
  .container
    .pb-2.mt-2.mb-4.border-bottom
      h1.h2 Past Quality

  .container-fluid
    form(method='POST')
      input(type='hidden', name='_csrf', value=_csrf)
      div.table-responsive
        table.table.table-sm(summary='Past Miller Beach / NWI Air Quality & Weather')
          caption
            | Past Miller Beach / NWI Air Quality &amp; Weather
          thead
            tr
              th(colspan='1')
                | Time
              th(colspan='1')
                | PM25
              th(colspan='1')
                | PM10
              th(colspan='2')
                | Region
              th#par.span(colspan='10' scope='colgroup')
                | Weather
          tbody
            tr
              th(colspan=3)
                |
              th.text-uppercase#traffic(scope='col')
                | Traffic #[sub.d-block=`Miles`]
              th.text-uppercase#trains(scope='col')
                | Trains #[sub.d-block=`Total`]
              th.text-uppercase#summary(scope='col')
                | Summary
              th.text-uppercase#temp(scope='col')
                | Temp #[sub.d-block=`\xB0 f`]
              th.text-uppercase#humidity(scope='col')
                | Humidity #[sub.d-block=`%`]
              th.text-uppercase#Rain(scope='col')
                | precipIntensity #[sub.d-block=`in of liquid water per hour`]
              th.text-uppercase#pressure(scope='col')
                | Pressure #[sub.d-block=`in Hg`]
              th.text-uppercase#windspeed(scope='col')
                | Wind Speed #[sub.d-block=`miles`]
              th.text-uppercase#windgust(scope='col')
                | Wind Gust #[sub.d-block=`MPH`]
              th.text-uppercase#winddirection(scope='col')
                | Wind Direction
              th.text-uppercase#cloudcoverage(scope='col')
                | Cloud Coverage #[sub.d-block=`%`]
              th.text-uppercase#uvindex(scope='col')
                | UV Index
              th.text-uppercase#visibility(scope='col')
                | Visibility #[sub.d-block=`miles`]
              th.text-uppercase#ozone(scope='col')
                | Ozone #[a(href="https://en.wikipedia.org/wiki/Dobson_unit" role="button" target="_blank") #[sub.d-block DU]]
            each airshit in airshits
              tr
                td(colspan="1")
                  abbr(title=`${airshit.createdAt}`)
                    | #{dateTimeToHuman(airshit.createdAt)} ago
                td.aqi(class={
                  'aqi--good': airshit.PM25REALTIME['category'] === 'Good',
                  'aqi--moderate': airshit.PM25REALTIME['category'] === 'Moderate',
                  'aqi--unhealthy-sensitive': airshit.PM25REALTIME['category'] === 'Unhealthy for Sensitive Groups',
                  'aqi--unhealthy': airshit.PM25REALTIME['category'] === 'Unhealthy',
                  'aqi--unhealthy-very': airshit.PM25REALTIME['category'] === 'Very Unhealthy',
                  'aqi--death': airshit.PM25REALTIME['category'] === 'Hazardous',
                })
                  span.score
                    span.number
                      | #{airshit.PM25REALTIME.aqi}
                    span.category
                      | #{airshit.PM25REALTIME.category}
                td.aqi(class={
                  'aqi--good': airshit.PM10REALTIME['category'] === 'Good',
                  'aqi--moderate': airshit.PM10REALTIME['category'] === 'Moderate',
                  'aqi--unhealthy-sensitive': airshit.PM10REALTIME['category'] === 'Unhealthy for Sensitive Groups',
                  'aqi--unhealthy': airshit.PM10REALTIME['category'] === 'Unhealthy',
                  'aqi--unhealthy-very': airshit.PM10REALTIME['category'] === 'Very Unhealthy',
                  'aqi--death': airshit.PM10REALTIME['category'] === 'Hazardous',
                })
                  span.score
                    span.number
                      | #{airshit.PM10REALTIME.aqi}
                    span.category
                      | #{airshit.PM10REALTIME.category}
                td(headers='congestion miles')
                  span.d-block.lead.text-center.mb-0 #{airshit.congestionMiles()}
                td(headers='trains')
                  span.d-block.lead.text-center.mb-0 #{airshit.trainsCount()}
                td(headers='summary')
                  span.d-block.lead.text-center.font-weight-bold.mb-0.small #{airshit.REPORTED_WEATHER.summary}
                td(headers='temp f')
                  span.d-block.lead.text-center.font-weight-bold.mb-0.p-2 #{airshit.TEMP_F}
                td(headers='humidity')
                  span.d-block.lead.mb-0.p-2 #{airshit.HUMIDITY_PERCENT }
                td(headers='precipIntensity')
                  span.d-block.lead.mb-0.p-2 #{airshit.REPORTED_WEATHER['precipIntensity']}
                td(headers='PRESSURE_BAR')
                  span.d-block.lead.mb-0.p-2 #{(airshit.PRESSURE_BAR * 0.02953).toFixed(0) }
                td(headers='windSpeed')
                  span.d-block.lead.mb-0.p-2 #{airshit.REPORTED_WEATHER.windSpeed.toFixed(0)}
                td(headers='windGust')
                  span.d-block.lead.mb-0.p-2 #{airshit.REPORTED_WEATHER.windGust.toFixed(0)}
                td(headers='windDirection')
                  span.d-block.lead.mb-0.p-2.text-center(title=`${airshit.REPORTED_WEATHER['windBearing']} \xB0 degrees`, style=`transform: rotate(${degeesToRotation(airshit.REPORTED_WEATHER['windBearing'])}deg)`)
                    | &#x2191;
                td(headers='cloudCover')
                  span.d-block.lead.mb-0.p-2 #{(airshit.REPORTED_WEATHER['cloudCover'] * 100).toFixed(0)}
                td(headers='uvIndex')
                  span.d-block.lead.mb-0.p-2 #{airshit.REPORTED_WEATHER.uvIndex}
                td(headers='visibility')
                  span.d-block.lead.mb-0.p-2 #{airshit.REPORTED_WEATHER['visibility'].toFixed(0)}
                td(headers='ozone')
                  span.d-block.lead.mb-0.p-2 #{airshit.REPORTED_WEATHER['ozone'].toFixed(0)}

      nav(aria-label="past navigation")
        ul.pagination.pagination-md.justify-content-center
          li.page-item(class= {disabled: currentPage==1})
            a.page-link(href="/past?page="+(currentPage-1) tabindex="-1") Previous
          - var p = 0;
          while p < possiblePages.length
            li.page-item(class= {active: currentPage == possiblePages[p]} )
              a.page-link(href="/past?page="+possiblePages[p])=possiblePages[p]
            - p++;
          li.page-item(class={disabled: currentPage == total})
            a.page-link(href="/past?page="+ ++currentPage ) Next
